{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/arjun/Downloads/app/src/components/Team.js\";\nimport { useState, useEffect } from 'react';\n\nfunction Team(props) {\n  const getAverage = type => props.data.value.map(x => x.abilities.find(k => k.type === type).rating).reduce((accu, curr) => accu + curr, 0) / props.data.value.length;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [props.data.key, \" (Average ability: \", parseFloat((getAverage(\"Risotto\") + getAverage(\"Pizza\") + getAverage(\"Cake\") + getAverage(\"Baked Potato\")) / 4).toFixed(2), \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-responsive\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-bordered table-striped table-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Sr.#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Full Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Risotto Rating\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Pizza Rating\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Cake Rating\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Baked Potato Rating\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [props.data.value.map((chef, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-center\",\n              children: idx + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [chef.firstName, \" \", chef.lastName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-right\",\n              children: chef.abilities.find(k => k.type === \"Risotto\").rating\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-right\",\n              children: chef.abilities.find(k => k.type === \"Pizza\").rating\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-right\",\n              children: chef.abilities.find(k => k.type === \"Cake\").rating\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-right\",\n              children: chef.abilities.find(k => k.type === \"Baked Potato\").rating\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 29\n            }, this)]\n          }, chef._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Average\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-right\",\n              style: {\n                fontWeight: '700'\n              },\n              children: getAverage(\"Risotto\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-right\",\n              style: {\n                fontWeight: '700'\n              },\n              children: getAverage(\"Pizza\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-right\",\n              style: {\n                fontWeight: '700'\n              },\n              children: getAverage(\"Cake\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-right\",\n              style: {\n                fontWeight: '700'\n              },\n              children: getAverage(\"Baked Potato\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Team;\nexport default Team;\n\nvar _c;\n\n$RefreshReg$(_c, \"Team\");","map":{"version":3,"sources":["/Users/arjun/Downloads/app/src/components/Team.js"],"names":["useState","useEffect","Team","props","getAverage","type","data","value","map","x","abilities","find","k","rating","reduce","accu","curr","length","key","parseFloat","toFixed","chef","idx","firstName","lastName","_id","fontWeight"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAEjB,QAAMC,UAAU,GAAGC,IAAI,IAAIF,KAAK,CAACG,IAAN,CAAWC,KAAX,CAAiBC,GAAjB,CAAqBC,CAAC,IAAIA,CAAC,CAACC,SAAF,CAAYC,IAAZ,CAAiBC,CAAC,IAAIA,CAAC,CAACP,IAAF,KAAWA,IAAjC,EAAuCQ,MAAjE,EAAyEC,MAAzE,CAAgF,CAACC,IAAD,EAAOC,IAAP,KAAgBD,IAAI,GAAGC,IAAvG,EAA6G,CAA7G,IAAkHb,KAAK,CAACG,IAAN,CAAWC,KAAX,CAAiBU,MAA9J;;AAEA,sBACI;AAAA,4BACI;AAAA,iBAAKd,KAAK,CAACG,IAAN,CAAWY,GAAhB,yBAAwCC,UAAU,CAAC,CAACf,UAAU,CAAC,SAAD,CAAV,GAAsBA,UAAU,CAAC,OAAD,CAAhC,GAA0CA,UAAU,CAAC,MAAD,CAApD,GAA6DA,UAAU,CAAC,cAAD,CAAxE,IAA0F,CAA3F,CAAV,CAAwGgB,OAAxG,CAAgH,CAAhH,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACI;AAAO,QAAA,SAAS,EAAC,6CAAjB;AAAA,gCACI;AAAA,iCACA;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAWI;AAAA,qBACCjB,KAAK,CAACG,IAAN,CAAWC,KAAX,CAAiBC,GAAjB,CAAqB,CAACa,IAAD,EAAOC,GAAP,kBAClB;AAAA,oCACI;AAAI,cAAA,SAAS,EAAC,aAAd;AAAA,wBAA6BA,GAAG,GAAG;AAAnC;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,yBAAKD,IAAI,CAACE,SAAV,OAAsBF,IAAI,CAACG,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAI,cAAA,SAAS,EAAC,YAAd;AAAA,wBAA4BH,IAAI,CAACX,SAAL,CAAeC,IAAf,CAAoBC,CAAC,IAAIA,CAAC,CAACP,IAAF,KAAW,SAApC,EAA+CQ;AAA3E;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAI,cAAA,SAAS,EAAC,YAAd;AAAA,wBAA4BQ,IAAI,CAACX,SAAL,CAAeC,IAAf,CAAoBC,CAAC,IAAIA,CAAC,CAACP,IAAF,KAAW,OAApC,EAA6CQ;AAAzE;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAI,cAAA,SAAS,EAAC,YAAd;AAAA,wBAA4BQ,IAAI,CAACX,SAAL,CAAeC,IAAf,CAAoBC,CAAC,IAAIA,CAAC,CAACP,IAAF,KAAW,MAApC,EAA4CQ;AAAxE;AAAA;AAAA;AAAA;AAAA,oBALJ,eAMI;AAAI,cAAA,SAAS,EAAC,YAAd;AAAA,wBAA4BQ,IAAI,CAACX,SAAL,CAAeC,IAAf,CAAoBC,CAAC,IAAIA,CAAC,CAACP,IAAF,KAAW,cAApC,EAAoDQ;AAAhF;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA,aAASQ,IAAI,CAACI,GAAd;AAAA;AAAA;AAAA;AAAA,kBADH,CADD,eAWA;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAI,cAAA,SAAS,EAAC,YAAd;AAA2B,cAAA,KAAK,EAAE;AAACC,gBAAAA,UAAU,EAAE;AAAb,eAAlC;AAAA,wBAAwDtB,UAAU,CAAC,SAAD;AAAlE;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAI,cAAA,SAAS,EAAC,YAAd;AAA2B,cAAA,KAAK,EAAE;AAACsB,gBAAAA,UAAU,EAAE;AAAb,eAAlC;AAAA,wBAAwDtB,UAAU,CAAC,OAAD;AAAlE;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAI,cAAA,SAAS,EAAC,YAAd;AAA2B,cAAA,KAAK,EAAE;AAACsB,gBAAAA,UAAU,EAAE;AAAb,eAAlC;AAAA,wBAAwDtB,UAAU,CAAC,MAAD;AAAlE;AAAA;AAAA;AAAA;AAAA,oBALJ,eAMI;AAAI,cAAA,SAAS,EAAC,YAAd;AAA2B,cAAA,KAAK,EAAE;AAACsB,gBAAAA,UAAU,EAAE;AAAb,eAAlC;AAAA,wBAAwDtB,UAAU,CAAC,cAAD;AAAlE;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuCH;;KA3CQF,I;AA6CT,eAAeA,IAAf","sourcesContent":["import {useState, useEffect} from 'react';\r\n\r\nfunction Team(props) {\r\n\r\n    const getAverage = type => props.data.value.map(x => x.abilities.find(k => k.type === type).rating).reduce((accu, curr) => accu + curr, 0) / props.data.value.length;\r\n\r\n    return (\r\n        <div>\r\n            <h3>{props.data.key} (Average ability: {parseFloat((getAverage(\"Risotto\")+getAverage(\"Pizza\")+getAverage(\"Cake\")+getAverage(\"Baked Potato\"))/4).toFixed(2)})</h3>\r\n            <div className=\"table-responsive\">\r\n                <table className=\"table table-bordered table-striped table-sm\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>Sr.#</th>\r\n                        <th>Full Name</th>\r\n                        <th>Risotto Rating</th>\r\n                        <th>Pizza Rating</th>\r\n                        <th>Cake Rating</th>\r\n                        <th>Baked Potato Rating</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {props.data.value.map((chef, idx) =>\r\n                        <tr key={chef._id}>\r\n                            <td className=\"text-center\">{idx + 1}</td>\r\n                            <td>{chef.firstName} {chef.lastName}</td>\r\n                            <td className=\"text-right\">{chef.abilities.find(k => k.type === \"Risotto\").rating}</td>\r\n                            <td className=\"text-right\">{chef.abilities.find(k => k.type === \"Pizza\").rating}</td>\r\n                            <td className=\"text-right\">{chef.abilities.find(k => k.type === \"Cake\").rating}</td>\r\n                            <td className=\"text-right\">{chef.abilities.find(k => k.type === \"Baked Potato\").rating}</td>\r\n                        </tr>\r\n                    )}\r\n                    <tr>\r\n                        <th></th>\r\n                        <th>Average</th>\r\n                        <td className=\"text-right\" style={{fontWeight: '700'}}>{getAverage(\"Risotto\")}</td>\r\n                        <td className=\"text-right\" style={{fontWeight: '700'}}>{getAverage(\"Pizza\")}</td>\r\n                        <td className=\"text-right\" style={{fontWeight: '700'}}>{getAverage(\"Cake\")}</td>\r\n                        <td className=\"text-right\" style={{fontWeight: '700'}}>{getAverage(\"Baked Potato\")}</td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Team;\r\n"]},"metadata":{},"sourceType":"module"}